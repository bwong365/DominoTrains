// <auto-generated />
using System;
using DominoTrains.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DominoTrains.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20221027080241_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DominoTrains.Domain.Aggregates.Game", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("TrainStationId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("TrainStationId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("DominoTrains.Domain.Models.Train", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("EdgeValue")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Train");
                });

            modelBuilder.Entity("DominoTrains.Domain.Models.TrainStation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("EastId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("NorthId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("SouthId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("WestId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("EastId");

                    b.HasIndex("NorthId");

                    b.HasIndex("SouthId");

                    b.HasIndex("WestId");

                    b.ToTable("TrainStation");
                });

            modelBuilder.Entity("DominoTrains.Domain.Aggregates.Game", b =>
                {
                    b.HasOne("DominoTrains.Domain.Models.TrainStation", "TrainStation")
                        .WithMany()
                        .HasForeignKey("TrainStationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("DominoTrains.Domain.Models.Player", "Player", b1 =>
                        {
                            b1.Property<Guid>("GameId")
                                .HasColumnType("uuid");

                            b1.HasKey("GameId");

                            b1.ToTable("Games");

                            b1.WithOwner()
                                .HasForeignKey("GameId");

                            b1.OwnsMany("DominoTrains.Domain.ValueObjects.Domino", "Dominoes", b2 =>
                                {
                                    b2.Property<Guid>("PlayerGameId")
                                        .HasColumnType("uuid");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("integer");

                                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b2.Property<int>("Id"));

                                    b2.Property<int>("A")
                                        .HasColumnType("integer");

                                    b2.Property<int>("B")
                                        .HasColumnType("integer");

                                    b2.HasKey("PlayerGameId", "Id");

                                    b2.ToTable("Games_Dominoes");

                                    b2.WithOwner()
                                        .HasForeignKey("PlayerGameId");
                                });

                            b1.Navigation("Dominoes");
                        });

                    b.Navigation("Player")
                        .IsRequired();

                    b.Navigation("TrainStation");
                });

            modelBuilder.Entity("DominoTrains.Domain.Models.Train", b =>
                {
                    b.OwnsMany("DominoTrains.Domain.ValueObjects.Domino", "Dominoes", b1 =>
                        {
                            b1.Property<Guid>("TrainId")
                                .HasColumnType("uuid");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b1.Property<int>("Id"));

                            b1.Property<int>("A")
                                .HasColumnType("integer");

                            b1.Property<int>("B")
                                .HasColumnType("integer");

                            b1.HasKey("TrainId", "Id");

                            b1.ToTable("Train_Dominoes");

                            b1.WithOwner()
                                .HasForeignKey("TrainId");
                        });

                    b.Navigation("Dominoes");
                });

            modelBuilder.Entity("DominoTrains.Domain.Models.TrainStation", b =>
                {
                    b.HasOne("DominoTrains.Domain.Models.Train", "East")
                        .WithMany()
                        .HasForeignKey("EastId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DominoTrains.Domain.Models.Train", "North")
                        .WithMany()
                        .HasForeignKey("NorthId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DominoTrains.Domain.Models.Train", "South")
                        .WithMany()
                        .HasForeignKey("SouthId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DominoTrains.Domain.Models.Train", "West")
                        .WithMany()
                        .HasForeignKey("WestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("East");

                    b.Navigation("North");

                    b.Navigation("South");

                    b.Navigation("West");
                });
#pragma warning restore 612, 618
        }
    }
}
